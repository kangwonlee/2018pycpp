# ref : Francesco Mosconi, Travis + Anaconda + Jupyter, https://github.com/ghego/travis_anaconda_jupyter
#       Anaconda Inc., Using conda with Travis CI, Conda documentation, https://conda.io/docs/user-guide/tasks/use-conda-with-travis-ci.html
#       .travis.yml for gcc-5 compiler support on Travis CI , https://gist.github.com/cotsog/3ce84675af0d74438d91
#       CodeChat, .travis.yml - Travis CI configuration, https://pythonhosted.org/CodeChat/.travis.yml.html
#       Travis CI, Python example (unsupported languages), https://docs.travis-ci.com/user/multi-os/#python-example-unsupported-languages


language : shell

env:
  global:
    - MINICONDA_DOWNLOAD=$HOME/download
    - MINICONDA_PATH=$HOME/miniconda
  matrix:
    - CONDA_PYTHON=3.6
    - CONDA_PYTHON=3.7
    - CONDA_PYTHON=3.7.1
    - CONDA_PYTHON=3.7.3
    - CONDA_PYTHON=nightly

os :
  - linux
  - osx

before_cache:
  - rm -rf $MINICONDA_PATH/locks $MINICONDA_PATH/pkgs $MINICONDA_PATH/var $MINICONDA_PATH/conda-meta/history $MINICONDA_PATH/envs/test-environment/conda-meta/history $MINICONDA_PATH/lib/python3.6/__pycache__ $MINICONDA_PATH/lib/python3.7/__pycache__;
  - touch $MINICONDA_PATH/conda-meta/history;

cache :
  directories:
    - $MINICONDA_DOWNLOAD
    - $MINICONDA_PATH

before_install:
  # When C++14 support becomes more clear, consider revision
  # https://docs.travis-ci.com/user/multi-os/
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
      sudo apt-get update -qq;
    fi;
  - MINICONDA_SUB_PATH=$MINICONDA_PATH/bin;
  - MINICONDA_LIB_BIN_PATH=$MINICONDA_PATH/Library/bin;

install:
  # When C++14 support becomes more clear, consider revision
  # https://docs.travis-ci.com/user/multi-os/
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get update;
      sudo apt-get install -qq g++-6;
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 90;
    fi
  # Obtain miniconda installer for the OS
  - if [[ -f $MINICONDA_DOWNLOAD/miniconda.sh && $CONDA_PYTHON != "nightly" ]]; then
      echo "miniconda.sh for posix already available";
    else
      mkdir -p $MINICONDA_DOWNLOAD/;
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        echo "downloading miniconda.sh for linux";
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $MINICONDA_DOWNLOAD/miniconda.sh;
      elif  [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        echo "downloading miniconda.sh for osx";
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O $MINICONDA_DOWNLOAD/miniconda.sh;
      fi;
    fi;
  # Install miniconda if necessary
  - if [[ -d $MINICONDA_SUB_PATH && $CONDA_PYTHON != "nightly" ]]; then
      echo "miniconda for posix already available";
    else
      echo "installing miniconda for posix";
      bash $MINICONDA_DOWNLOAD/miniconda.sh -b -u -p $MINICONDA_PATH;
    fi;
  # Add miniconda path
  - export PATH="$MINICONDA_PATH:$MINICONDA_SUB_PATH:$MINICONDA_LIB_BIN_PATH:$PATH";
  - source $MINICONDA_PATH/etc/profile.d/conda.sh;
  # Forget all remembered locations
  - hash -r
  # Conda setup options
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # To help debugging
  - echo $TRAVIS_OS_NAME
  - echo $TRAVIS_PYTHON_VERSION
  - echo $CONDA_PYTHON
  # Useful for debugging any issues with conda
  - conda info -a
  # Apply python module recipies
  - if [[ ! -d $MINICONDA_PATH/envs/test-environment ]]; then
      echo "create test-environment";
      conda env create -n test-environment python=$CONDA_PYTHON -f ./tests/environment.${CONDA_PYTHON}.yml;
    else
      echo "update test-environment";
      conda env update -n test-environment python=$CONDA_PYTHON -f ./tests/environment.${CONDA_PYTHON}.yml;
    fi;
  - source activate test-environment
  - conda list

# https://lord.io/blog/2014/travis-multiple-subdirs/
script:
  - pytest -n auto tests/
