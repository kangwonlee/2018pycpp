# ref : Francesco Mosconi, Travis + Anaconda + Jupyter, https://github.com/ghego/travis_anaconda_jupyter
#       Anaconda Inc., Using conda with Travis CI, Conda documentation, https://conda.io/docs/user-guide/tasks/use-conda-with-travis-ci.html
#       .travis.yml for gcc-5 compiler support on Travis CI , https://gist.github.com/cotsog/3ce84675af0d74438d91
#       CodeChat, .travis.yml - Travis CI configuration, https://pythonhosted.org/CodeChat/.travis.yml.html
#       Travis CI, Python example (unsupported languages), https://docs.travis-ci.com/user/multi-os/#python-example-unsupported-languages

language: shell

os :
  - linux
  - osx
  - windows

env:
  - CONDA_PYTHON=3.6
  - CONDA_PYTHON=3.7
  - CONDA_PYTHON=nightly

matrix:
  allow_failures:
    - os : windows
  fast_finish: true

before_cache:
- rm -rf $HOME/miniconda/locks $HOME/miniconda/pkgs $HOME/miniconda/var $HOME/miniconda/conda-meta/history $HOME/miniconda/envs/test-environment/conda-meta/history $HOME/miniconda/lib/python3.6/__pycache__ $HOME/miniconda/lib/python3.7/__pycache__

cache :
  directories:
    - $HOME/download
    - $HOME/miniconda
    - $HOME/AppData/Local/Temp/chocolatey

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-6

before_install:
  # https://docs.travis-ci.com/user/multi-os/
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then
      if [[ -f $HOME/download/miniconda.sh && $CONDA_PYTHON != "nightly" ]]; then
        echo "miniconda.sh for posix already available";
      else
        mkdir -p $HOME/download;
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
          echo "downloading miniconda.sh for linux";
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
        elif  [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          echo "downloading miniconda.sh for osx";
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O $HOME/download/miniconda.sh;
        fi;
      fi;
    fi

install:
  # When C++14 support becomes more clear, consider revision
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 90;
    fi
  # Install miniconda
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then
      echo "OS is not Windows";
      if [[ -e $HOME/miniconda/bin/conda && $CONDA_PYTHON != "nightly" ]]; then
        echo "miniconda for posix already available";
      else
        echo "installing miniconda for posix";
        bash $HOME/download/miniconda.sh -b -u -p $HOME/miniconda;
      fi;
    elif  [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      echo "OS is Windows";
      if [[ -e $HOME/miniconda/miniconda3/Scripts/conda && $CONDA_PYTHON != "nightly" ]];then
        echo "miniconda for Windows already installed";
      else
        echo "installing miniconda for windows";
        choco install miniconda3 --params="'/D:$HOME/miniconda'";
      fi;
    fi;
  - if [[ -d $HOME/miniconda ]]; then
      echo "$HOME/miniconda exists";
    fi;
  - if [[ -d $HOME/miniconda/miniconda3 ]]; then
      echo "$HOME/miniconda/miniconda3 exists";
    fi;
  - if [[ -d $HOME/miniconda/miniconda3/Scripts ]]; then
      echo "$HOME/miniconda/miniconda3/Scripts exists";
    fi;
  - if [[ -d $HOME/miniconda/miniconda3/scripts ]]; then
      echo "$HOME/miniconda/miniconda3/scripts exists";
    fi;
  - if [[ -d /c/tools/miniconda3 ]]; then
      echo "/c/tools/miniconda3 exists";
    fi;
  - if [[ -d /c/tools/miniconda3/Scripts ]]; then
      echo "/c/tools/miniconda3/Scripts exists";
    fi;
  - if [[ -d /c/tools/miniconda3/scripts ]]; then
      echo "/c/tools/miniconda3/scripts exists";
    fi;
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then 
      grep --line-number miniconda /C/ProgramData/chocolatey/logs/chocolatey.log;
    fi;
  - ls $HOME/miniconda;
  # To help debugging
  - echo $TRAVIS_OS_NAME
  - echo $CONDA_PYTHON
  - conda info -a
  # Forget all remembered locations
  - hash -r
  # Conda setup options
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Create or update test environment of python module recipies
  - if [[ ! -d $HOME/miniconda/envs/test-environment ]]; then
      if [[ "$CONDA_PYTHON" == "3.6" ]]; then
        conda env create -n test-environment python=$CONDA_PYTHON -f ./tests/environment.3.6.yml;
      elif [[ "$CONDA_PYTHON" == "3.7" ]]; then
        conda env create -n test-environment python=$CONDA_PYTHON -f ./tests/environment.3.7.yml;
      else
        conda env create -n test-environment python=$CONDA_PYTHON -f ./tests/environment.nightly.yml;
      fi;
    elif [[ -d $HOME/miniconda/envs/test-environment ]]; then
      if [[ "$CONDA_PYTHON" == "3.6" ]]; then
        conda env update -n test-environment python=$CONDA_PYTHON -f ./tests/environment.3.6.yml;
      elif [[ "$CONDA_PYTHON" == "3.7" ]]; then
        conda env update -n test-environment python=$CONDA_PYTHON -f ./tests/environment.3.7.yml;
      else
        conda env update -n test-environment python=$CONDA_PYTHON -f ./tests/environment.nightly.yml;
      fi;
    fi
  - source activate test-environment
  - conda list

script: 
  - cd tests && py.test

notifications:
    email:
        - kangwon.lee.edu@gmail.com
